# docker-compose.yml

version: '3'

services:
  redis:
    container_name: rtg-redis
    restart: always
    image: redis:5.0.6-alpine
    networks:
      - main
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_PORT}:6379

  db-server:
    restart: always
    image: postgres:latest
    container_name: rtg-db-server
    # ports:
    #   - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - main
    volumes:
      - pgdata:/var/lib/postgresql/rtg_db/

  web-server:
    restart: always
    build:
      context: ./src
    links:
      - db-server:postgres
    networks:
      - main
    volumes:
      # - ./src:/usr/src/web
      - web-static:/staticfiles
      - web-media:/media
    # Modify on Feb 4,2022 -- To improve system stability
    # command: gunicorn autoberth.wsgi:application --workers=4 --threads=4 -b :8000
    command: gunicorn rtg.wsgi:application --workers=8 --threads=3 --worker-class=gthread -b :8000
    container_name: rtg-web-server
    depends_on:
      - redis
    environment:
      - REDIS_URL=
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_READING_DB=${RTG_READING_VALUE_DB}
      - REDIS_CLUSTER_DB=${REDIS_CLUSTER_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - WEBSOCKET_SERVER_URL=${WEBSOCKET_SERVER_URL}
    ports:
      - ${WEB_PORT}:8000
      # ${WEB_PORT}
# redis://redis:${REDIS_PORT}/${RTG_READING_VALUE_DB}
  qcluster:
    restart: always
    build:
      context: ./src
    networks:
      - main
    volumes:
      # - web-django:/usr/src/app
      - web-static:/staticfiles
      - web-media:/media
    command: python3 manage.py qcluster
    container_name: rtg-qcluster
    depends_on:
      - web-server
    environment:
      - REDIS_URL=redis://redis:${REDIS_PORT}/${RTG_READING_VALUE_DB}
      - REDIS_CLUSTER_DB=${REDIS_CLUSTER_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - WEBSOCKET_SERVER_URL=${WEBSOCKET_SERVER_URL}

  notify:
    container_name: rtg-notify
    restart: always
    networks:
        - main
    build: ./socket
    depends_on:
      - redis
    environment:
      - REDIS_PORT=${REDIS_PORT}
    ports:
        - ${NOTIFY_PORT}:3000 

volumes:  
  redis_data:
  web-static:
  web-media:
  pgdata:


networks:
  main: